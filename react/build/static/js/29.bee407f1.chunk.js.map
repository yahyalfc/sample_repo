{"version":3,"sources":["utils/time/timeAndDate.js","services/firebase/notifications_service.js","static/customer-notifications.js","static/supplier-notifications.js","hooks/useAllNotifications.js","components/AllNotifications/index.js"],"names":["time_service","returnTime","today","Date","hours","getHours","minutes","getMinutes","ampm","returnDate","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","convertDateFormat","updatedAt","date","time","rootRef","Firebase","database","ref","firebase_notification_service","getNotification","userID","Promise","resolve","reject","a","child","on","snapshot","console","log","data","id","key","val","status","err","getAllNotifications","forEach","snappy","push","getNewNotifications","orderByChild","equalTo","getNotificationById","notificationID","once","notificationRead","update","notificationStatus","text","useAllNotifications","useState","allNotifications","setAllNotifications","user","useSelector","state","error","seterror","useEffect","sort","b","createdAt","AllNotifications","notifications","setNotifications","orders","computeOwner","orderID","order","find","item","role","customerName","supplierName","style","padding","color","display","justifyContent","alignItems","width","border","map","notification","to","pathname","type","MenuItem","onClick","then","res","handleNotificationClick","fontSize","margin","flexWrap","statuss","supplier_status","customer_status","Divider"],"mappings":"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","file":"static/js/29.bee407f1.chunk.js","sourcesContent":["\nexport const time_service = {\n  returnTime,\n  returnDate,\n  convertDateFormat\n};\n\nfunction returnDate() {\n  const today = new Date();\n  const dd = String(today.getDate()).padStart(2, '0');\n  const mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n  const yyyy = today.getFullYear();\n  return dd + '/' + mm + '/' + yyyy;\n}\n\nfunction returnTime() {\n  const today = new Date();\n  let hours = today.getHours();\n  let minutes = today.getMinutes();\n  let ampm = hours >= 12 ? 'PM' : 'AM';\n  hours = hours % 12;\n  hours = hours ? hours : 12;\n  minutes = minutes < 10 ? '0' + minutes : minutes;\n  return hours + ':' + minutes + ' ' + ampm;\n}\n\nfunction convertDateFormat(updatedAt) {\n  const today = new Date(updatedAt);\n  const dd = String(today.getDate()).padStart(2, '0');\n  const mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n  const yyyy = today.getFullYear();\n  const date = dd + '/' + mm + '/' + yyyy;\n  let hours = today.getHours();\n  let minutes = today.getMinutes();\n  let ampm = hours >= 12 ? 'PM' : 'AM';\n  hours = hours % 12;\n  hours = hours ? hours : 12;\n  minutes = minutes < 10 ? '0' + minutes : minutes;\n  const time = hours + ':' + minutes + ' ' + ampm;\n  return { date, time }\n} ","import Firebase from '../../firebaseConfig'\nimport 'firebase/database'\nconst rtdb = Firebase.database();\nconst rootRef = rtdb.ref('users')\n\nexport const firebase_notification_service = {\n  getNotification,\n  getAllNotifications,\n  getNewNotifications,\n  getNotificationById,\n  notificationRead\n}\n\nfunction getNotification(userID) {\n  return new Promise(async (resolve, reject) => {\n    try {\n      rootRef.child(userID).child('notifications').on('child_added', (snapshot) => {\n        console.log('a new notification')\n        const data = { id: snapshot.key, ...snapshot.val() };\n        resolve({ status: true, data })\n      })\n    } catch (err) {\n      console.log(err)\n      reject(err)\n    }\n  })\n}\n\nfunction notificationRead(userID, notificationID) {\n  return new Promise(async (resolve, reject) => {\n    try {\n      rootRef.child(userID).child('notifications').child(notificationID).update({\n        notificationStatus: 'read'\n      });\n    } catch (err) {\n      console.log(err)\n      reject(err)\n    }\n  })\n}\n\nfunction getNewNotifications(userID) {\n  return new Promise(async (resolve, reject) => {\n    try {\n      let data = []\n      rootRef.child(userID).child('notifications').orderByChild('notificationStatus').equalTo('new').on('value', (snapshot) => {\n        console.log('getting all new notifications');\n        snapshot.forEach((snappy) => {\n          data.push({ ...snappy.val(), id: snappy.key })\n        })\n        resolve({ status: true, data })\n      })\n    } catch (err) {\n      console.log(err);\n      reject(err)\n    }\n  })\n}\n\nfunction getNotificationById(userID, notificationID) {\n  return new Promise(async (resolve, reject) => {\n    try {\n      console.log('getting notification by id');\n      rootRef.child(userID).child('notifications').child(notificationID).once('value', (snapshot) => {\n        const data = { id: snapshot.key, ...snapshot.val() };\n        resolve({ status: true, data });\n      });\n    } catch (err) {\n      console.log(err)\n      reject(err)\n    }\n  })\n}\n\nfunction getAllNotifications(userID) {\n  console.log({ userID });\n  return new Promise(async (resolve, reject) => {\n    let data = []\n\n    try {\n      rootRef.child(userID).child('notifications').on('value', (snapshot) => {\n        console.log('getting all notifications');\n        snapshot.forEach((snappy) => {\n          data.push({ ...snappy.val(), id: snappy.key })\n        })\n        resolve({ status: true, data })\n      })\n    } catch (err) {\n      console.log(err);\n      reject(err)\n    }\n  })\n}\n","export default [{ status: \"confirmed\", text: \"confirmed the order.\" }, { status: \"fulfilled\", text: \"finalised the order.\" }, { status: \"cancelled\", text: \"cancelled the order\" }, { status: \"invoice-generated\", text: \"generated invoice for the order\" }, { status: \"supplier-items-added\", text: \"added extra items to order\" }]\n","export default [{ status: \"unapproved\", text: \"created an order\" }, { status: \"reconfirmed\", text: \"confirmed the order\" }, { status: \"cancelled\", text: \"cancelled the order\" }]\n","import { useState, useEffect } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport Firebase from '../firebaseConfig'\nimport 'firebase/database'\nconst rtdb = Firebase.database();\nconst rootRef = rtdb.ref('users')\n\nconst useAllNotifications = () => {\n  const [allNotifications, setAllNotifications] = useState([])\n  const user = useSelector(state => state.user)\n  const [error, seterror] = useState(null)\n\n  useEffect(() => {\n    try {\n      rootRef.child(user.id).child('notifications').on('value', (snapshot) => {\n        let data = []\n        snapshot.forEach((snappy) => {\n          data = [...data, { ...snappy.val(), id: snappy.key }]\n        })\n        setAllNotifications(data.sort((a, b) => b.createdAt - a.createdAt))\n      })\n    } catch (err) {\n      seterror(err)\n    }\n  }, [])\n\n  return { allNotifications, error }\n}\n\nexport default useAllNotifications;\n","import { Divider, MenuItem } from '@material-ui/core'\nimport { useState, useEffect } from 'react'\nimport useAllNotifications from '../../hooks/useAllNotifications'\nimport { firebase_notification_service } from '../../services/firebase/notifications_service'\nimport { useSelector } from 'react-redux'\nimport supplier_status from '../../static/supplier-notifications'\nimport customer_status from '../../static/customer-notifications'\nimport { time_service } from '../../utils/time/timeAndDate'\nimport { Link } from \"react-router-dom\";\nimport DateRangeIcon from '@material-ui/icons/DateRange';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nfunction AllNotifications() {\n  const { allNotifications, error } = useAllNotifications()\n  const [notifications, setNotifications] = useState([])\n  const user = useSelector(state => state.user)\n  const orders = useSelector(state => state.orders)\n\n  useEffect(() => {\n    setNotifications(allNotifications)\n  }, [allNotifications])\n\n  const handleNotificationClick = (notification) => {\n    if (notification.type == 'order') {\n      firebase_notification_service.notificationRead(user.id, notification.id).then((res) => {\n        //go to relevant order\n      })\n    }\n  }\n\n  const computeStatus = (statuss) => {\n    if (user.role == 'Supplier' && statuss) {\n      return supplier_status.find((item) => item.status == statuss).text;\n    }\n    else if (user.role == 'Customer' && statuss) {\n      return customer_status.find((item) => item.status == statuss).text\n    }\n    else return statuss;\n  }\n\n  const computeOwner = (orderID) => {\n    const order = orders.find((item) => item.orderID === orderID)\n    if (user.role == 'Supplier') return order.customerName\n    if (user.role == 'Customer') return order.supplierName\n  }\n\n  const computeWhereToGo = (role) => {\n    return role == 'Supplier' ? 'supplier' : 'customer'\n  }\n\n  return (\n    <div style={{ padding: 40, }}>\n      <h1 style={{ color: 'gray' }}>All notifications</h1>\n      <div style={{ display: 'flex', justifyContent: 'center', padding: 10, alignItems: 'center' }}>\n        <div style={{ width: '70%', border: '2px solid rgba(0, 0, 0, 0.05)', }}>\n          {\n            notifications.map((notification) => (\n              <>\n                <Link\n                  to={{\n                    pathname: `/app/${computeWhereToGo(user.role)}/${notification.type}?id=${notification.orderID}`,\n                  }}\n                >\n                  <MenuItem\n                    alignItems=\"center\"\n                    // className=\" MuiMenu-item\"\n                    onClick={() => handleNotificationClick(notification)}\n                    style={{ padding: 10 }}\n                  >\n                    <div style={{}}>\n                      <p\n                        style={{\n                          fontSize: 15, color: 'gray',\n                          padding: 0,\n                          margin: 0,\n                          display: \"flex\",\n                          flexWrap: 'wrap'\n                        }}\n                      >\n                        {computeOwner(notification.orderID)}\n                        {\" \"}\n                        {\n                          computeStatus(notification.status)\n                        }\n                      </p>\n                      <p style={{ color: 'gray' }}>\n                        <div style={{ display: 'inline-block' }}>\n                          <DateRangeIcon fontSize=\"small\" style={{ color: '#42a5f5' }} /> <span style={{}}>{time_service.convertDateFormat(notification.createdAt).time} <AccessTimeIcon fontSize=\"small\" /> {time_service.convertDateFormat(notification.createdAt).date} </span>\n                        </div>\n                      </p>\n                    </div>\n                  </MenuItem>\n                </Link>\n                <Divider />\n              </>\n            ))\n          }\n        </div>\n      </div>\n    </div >\n  )\n}\n\nexport default AllNotifications\n"],"sourceRoot":""}